{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "IAbsorber": {
            "properties": {
                "color": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IColor"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "opacity": {
                    "type": "number"
                },
                "position": {
                    "$ref": "#/definitions/ICoordinates"
                },
                "size": {
                    "$ref": "#/definitions/IAbsorberSize"
                }
            },
            "type": "object"
        },
        "IAbsorberRandomSize": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "minimumValue": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IAbsorberSize": {
            "properties": {
                "density": {
                    "type": "number"
                },
                "limit": {
                    "type": "number"
                },
                "random": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IAbsorberRandomSize"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IAttract": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "rotate": {
                    "$ref": "#/definitions/ICoordinates"
                },
                "rotateX": {
                    "type": "number"
                },
                "rotateY": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IBackground": {
            "description": "The background options used by the canvas element, it's not drawn, it's applied in the style",
            "properties": {
                "color": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IColor"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "The background color used by the canvas element, string or [[IColor]] value"
                },
                "image": {
                    "description": "The background image used by the canvas element, its value will be used to set CSS property background-image",
                    "type": "string"
                },
                "opacity": {
                    "description": "The background opacity",
                    "type": "number"
                },
                "position": {
                    "description": "The background position, it's used by the CSS property background-position",
                    "type": "string"
                },
                "repeat": {
                    "description": "The background position, it's used by the CSS property background-repeat",
                    "type": "string"
                },
                "size": {
                    "description": "The background size, it's used by the CSS property background-size",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IBackgroundMask": {
            "description": "The options to apply a base color to canvas to cover what's behind\nThe particles will unveil what is covered by the canvas",
            "properties": {
                "cover": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IColor"
                        },
                        {
                            "$ref": "#/definitions/IBackgroundMaskCover"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "The color to use as a canvas background to cover"
                },
                "enable": {
                    "description": "This settings enables the cover and the particles behavior as unveiling elements",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "IBackgroundMaskCover": {
            "description": "The background cover customization",
            "properties": {
                "color": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IColor"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "The background color hiding all elements behind, string or [[IColor]] value."
                },
                "opacity": {
                    "description": "The opacity of the background",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IBubble": {
            "properties": {
                "color": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IColor"
                        },
                        {
                            "items": {
                                "anyOf": [
                                    {
                                        "$ref": "#/definitions/IColor"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "distance": {
                    "type": "number"
                },
                "duration": {
                    "type": "number"
                },
                "opacity": {
                    "type": "number"
                },
                "size": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ICharacterShape": {
            "properties": {
                "close": {
                    "type": "boolean"
                },
                "fill": {
                    "type": "boolean"
                },
                "font": {
                    "type": "string"
                },
                "particles": {
                    "$ref": "#/definitions/RecursivePartial<IParticles>"
                },
                "style": {
                    "type": "string"
                },
                "value": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "weight": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IClickEvent": {
            "description": "The canvas click event",
            "properties": {
                "enable": {
                    "description": "This property enables or disables the click event",
                    "type": "boolean"
                },
                "mode": {
                    "anyOf": [
                        {
                            "items": {
                                "enum": [
                                    "absorber",
                                    "bubble",
                                    "emitter",
                                    "push",
                                    "remove",
                                    "repulse"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "enum": [
                                "absorber",
                                "bubble",
                                "emitter",
                                "push",
                                "remove",
                                "repulse"
                            ],
                            "type": "string"
                        }
                    ],
                    "description": "This property contains a [[ClickMode]] value or an array of those values.\nIf this value is an array, every mode will be used on click."
                }
            },
            "type": "object"
        },
        "ICollisions": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "mode": {
                    "enum": [
                        "bounce"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IColor": {
            "properties": {
                "value": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/IRgb"
                        },
                        {
                            "$ref": "#/definitions/IHsl"
                        },
                        {
                            "$ref": "#/definitions/IValueColor"
                        },
                        {
                            "type": "string"
                        }
                    ]
                }
            },
            "type": "object"
        },
        "IConnect": {
            "properties": {
                "distance": {
                    "type": "number"
                },
                "lineLinked": {
                    "$ref": "#/definitions/IConnectLineLinked"
                },
                "line_linked": {
                    "$ref": "#/definitions/IConnectLineLinked"
                },
                "radius": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IConnectLineLinked": {
            "properties": {
                "opacity": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ICoordinates": {
            "properties": {
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IDensity": {
            "properties": {
                "area": {
                    "type": "number"
                },
                "enable": {
                    "type": "boolean"
                },
                "value_area": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IDimension": {
            "properties": {
                "height": {
                    "type": "number"
                },
                "width": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IDivEvent": {
            "properties": {
                "el": {
                    "type": "string"
                },
                "elementId": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "mode": {
                    "anyOf": [
                        {
                            "items": {
                                "enum": [
                                    "repulse"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "enum": [
                                "repulse"
                            ],
                            "type": "string"
                        }
                    ]
                }
            },
            "type": "object"
        },
        "IEmitter": {
            "description": "Particles emitter object options",
            "properties": {
                "direction": {
                    "$ref": "#/definitions/MoveDirection",
                    "description": "The direction of the emitted particles, [[MoveDirection]] is the enum used for values"
                },
                "life": {
                    "$ref": "#/definitions/IEmitterLife",
                    "description": "The emitter life options"
                },
                "particles": {
                    "$ref": "#/definitions/RecursivePartial<IParticles>",
                    "description": "Particles emitted customization.\nThese settings will overrides other particles settings for the particles emitted by this emitter\nParticles number options won't override anything, they will be ignored completely"
                },
                "position": {
                    "$ref": "#/definitions/ICoordinates",
                    "description": "The relative position (in percent) of the emitter, where particles spawns.\nIf size is specified the position will be the center of the size options"
                },
                "rate": {
                    "$ref": "#/definitions/IEmitterRate",
                    "description": "The particles emitting rate options"
                },
                "size": {
                    "$ref": "#/definitions/IDimension",
                    "description": "The size of the particles emitter area"
                }
            },
            "type": "object"
        },
        "IEmitterLife": {
            "description": "The particles emitter life options",
            "properties": {
                "count": {
                    "description": "The count of lives the particles emitter has.\nIf <= 0 or not specified infinity will be the value.\nIf the count is > 0 it will spawn only that number of times then it'll be destroyed and removed",
                    "type": "number"
                },
                "delay": {
                    "description": "The delay between any spawn, except first.",
                    "type": "number"
                },
                "duration": {
                    "description": "The duration of any emitter life.\nIf <= 0 or  not specified infinity will be the value.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IEmitterRate": {
            "description": "The particles emitter rate options",
            "properties": {
                "delay": {
                    "description": "The emitting velocity, how many seconds will pass between the next particles creation\nDecimal values allowed",
                    "type": "number"
                },
                "quantity": {
                    "description": "The emitting quantity, how many particles will be created at every creation event",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IEvents": {
            "properties": {
                "onClick": {
                    "$ref": "#/definitions/IClickEvent"
                },
                "onDiv": {
                    "$ref": "#/definitions/IDivEvent"
                },
                "onHover": {
                    "$ref": "#/definitions/IHoverEvent"
                },
                "onclick": {
                    "$ref": "#/definitions/IClickEvent"
                },
                "ondiv": {
                    "$ref": "#/definitions/IDivEvent"
                },
                "onhover": {
                    "$ref": "#/definitions/IHoverEvent"
                },
                "resize": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "IGrab": {
            "properties": {
                "distance": {
                    "type": "number"
                },
                "lineLinked": {
                    "$ref": "#/definitions/IGrabLineLinked"
                },
                "line_linked": {
                    "$ref": "#/definitions/IGrabLineLinked"
                }
            },
            "type": "object"
        },
        "IGrabLineLinked": {
            "properties": {
                "opacity": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IHoverEvent": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "mode": {
                    "anyOf": [
                        {
                            "items": {
                                "enum": [
                                    "bubble",
                                    "connect",
                                    "grab",
                                    "repulse",
                                    "slow"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "enum": [
                                "bubble",
                                "connect",
                                "grab",
                                "repulse",
                                "slow"
                            ],
                            "type": "string"
                        }
                    ]
                },
                "parallax": {
                    "$ref": "#/definitions/IParallax"
                }
            },
            "type": "object"
        },
        "IHsl": {
            "properties": {
                "h": {
                    "type": "number"
                },
                "l": {
                    "type": "number"
                },
                "s": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IImageShape": {
            "properties": {
                "close": {
                    "type": "boolean"
                },
                "fill": {
                    "type": "boolean"
                },
                "height": {
                    "type": "number"
                },
                "particles": {
                    "$ref": "#/definitions/RecursivePartial<IParticles>"
                },
                "replaceColor": {
                    "type": "boolean"
                },
                "replace_color": {
                    "type": "boolean"
                },
                "src": {
                    "type": "string"
                },
                "width": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IInfection": {
            "properties": {
                "cure": {
                    "type": "boolean"
                },
                "delay": {
                    "type": "number"
                },
                "enable": {
                    "type": "boolean"
                },
                "infections": {
                    "type": "number"
                },
                "stages": {
                    "items": {
                        "$ref": "#/definitions/IInfectionStage"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "IInfectionStage": {
            "properties": {
                "color": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IColor"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "duration": {
                    "type": "number"
                },
                "infectedStage": {
                    "type": "number"
                },
                "radius": {
                    "type": "number"
                },
                "rate": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IInteractivity": {
            "properties": {
                "detect_on": {
                    "$ref": "#/definitions/InteractivityDetect"
                },
                "detectsOn": {
                    "$ref": "#/definitions/InteractivityDetect"
                },
                "events": {
                    "$ref": "#/definitions/IEvents"
                },
                "modes": {
                    "$ref": "#/definitions/IModes"
                }
            },
            "type": "object"
        },
        "ILineLinked": {
            "properties": {
                "blink": {
                    "type": "boolean"
                },
                "color": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IColor"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "consent": {
                    "type": "boolean"
                },
                "distance": {
                    "type": "number"
                },
                "enable": {
                    "type": "boolean"
                },
                "opacity": {
                    "type": "number"
                },
                "shadow": {
                    "$ref": "#/definitions/ILineLinkedShadow"
                },
                "width": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ILineLinkedShadow": {
            "properties": {
                "blur": {
                    "type": "number"
                },
                "color": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IColor"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "enable": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "IModes": {
            "properties": {
                "absorbers": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IAbsorber"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/IAbsorber"
                            },
                            "type": "array"
                        }
                    ]
                },
                "bubble": {
                    "$ref": "#/definitions/IBubble"
                },
                "connect": {
                    "$ref": "#/definitions/IConnect"
                },
                "emitters": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IEmitter"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/IEmitter"
                            },
                            "type": "array"
                        }
                    ]
                },
                "grab": {
                    "$ref": "#/definitions/IGrab"
                },
                "push": {
                    "$ref": "#/definitions/IPush"
                },
                "remove": {
                    "$ref": "#/definitions/IRemove"
                },
                "repulse": {
                    "$ref": "#/definitions/IRepulse"
                },
                "slow": {
                    "$ref": "#/definitions/ISlow"
                }
            },
            "type": "object"
        },
        "IMove": {
            "properties": {
                "attract": {
                    "$ref": "#/definitions/IAttract"
                },
                "bounce": {
                    "type": "boolean"
                },
                "collisions": {
                    "type": "boolean"
                },
                "direction": {
                    "$ref": "#/definitions/MoveDirection"
                },
                "enable": {
                    "type": "boolean"
                },
                "noise": {
                    "$ref": "#/definitions/INoise"
                },
                "outMode": {
                    "$ref": "#/definitions/OutMode"
                },
                "out_mode": {
                    "$ref": "#/definitions/OutMode"
                },
                "random": {
                    "type": "boolean"
                },
                "speed": {
                    "type": "number"
                },
                "straight": {
                    "type": "boolean"
                },
                "trail": {
                    "$ref": "#/definitions/ITrail"
                },
                "vibrate": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "INoise": {
            "properties": {
                "delay": {
                    "$ref": "#/definitions/INoiseDelay"
                },
                "enable": {
                    "type": "boolean"
                },
                "factor": {
                    "$ref": "#/definitions/INoiseFactor"
                }
            },
            "type": "object"
        },
        "INoiseDelay": {
            "properties": {
                "random": {
                    "$ref": "#/definitions/INoiseRandom"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "INoiseFactor": {
            "properties": {
                "horizontal": {
                    "$ref": "#/definitions/INoiseValue"
                },
                "vertical": {
                    "$ref": "#/definitions/INoiseValue"
                }
            },
            "type": "object"
        },
        "INoiseRandom": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "minimumValue": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "INoiseValue": {
            "properties": {
                "offset": {
                    "type": "number"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IOpacity": {
            "properties": {
                "anim": {
                    "$ref": "#/definitions/IOpacityAnimation"
                },
                "animation": {
                    "$ref": "#/definitions/IOpacityAnimation"
                },
                "random": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IOpacityRandom"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IOpacityAnimation": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "minimumValue": {
                    "type": "number"
                },
                "opacity_min": {
                    "type": "number"
                },
                "speed": {
                    "type": "number"
                },
                "sync": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "IOpacityRandom": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "minimumValue": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IParallax": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "force": {
                    "type": "number"
                },
                "smooth": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IParticles": {
            "properties": {
                "collisions": {
                    "$ref": "#/definitions/ICollisions"
                },
                "color": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IColor"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/IColor"
                            },
                            "type": "array"
                        }
                    ]
                },
                "lineLinked": {
                    "$ref": "#/definitions/ILineLinked"
                },
                "line_linked": {
                    "$ref": "#/definitions/ILineLinked"
                },
                "move": {
                    "$ref": "#/definitions/IMove"
                },
                "number": {
                    "$ref": "#/definitions/IParticlesNumber"
                },
                "opacity": {
                    "$ref": "#/definitions/IOpacity"
                },
                "rotate": {
                    "$ref": "#/definitions/IRotate"
                },
                "shadow": {
                    "$ref": "#/definitions/IShadow"
                },
                "shape": {
                    "$ref": "#/definitions/IShape"
                },
                "size": {
                    "$ref": "#/definitions/ISize"
                },
                "stroke": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IStroke"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/IStroke"
                            },
                            "type": "array"
                        }
                    ]
                },
                "twinkle": {
                    "$ref": "#/definitions/ITwinkle"
                }
            },
            "type": "object"
        },
        "IParticlesNumber": {
            "properties": {
                "density": {
                    "$ref": "#/definitions/IDensity"
                },
                "limit": {
                    "type": "number"
                },
                "max": {
                    "type": "number"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IPolygonInline": {
            "properties": {
                "arrangement": {
                    "$ref": "#/definitions/PolygonMaskInlineArrangement"
                }
            },
            "type": "object"
        },
        "IPolygonMask": {
            "properties": {
                "draw": {
                    "$ref": "#/definitions/IPolygonMaskDraw"
                },
                "enable": {
                    "type": "boolean"
                },
                "inline": {
                    "$ref": "#/definitions/IPolygonInline"
                },
                "inlineArrangement": {
                    "$ref": "#/definitions/PolygonMaskInlineArrangement"
                },
                "move": {
                    "$ref": "#/definitions/IPolygonMaskMove"
                },
                "position": {
                    "$ref": "#/definitions/ICoordinates"
                },
                "scale": {
                    "type": "number"
                },
                "type": {
                    "$ref": "#/definitions/PolygonMaskType"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IPolygonMaskDraw": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "lineColor": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IColor"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "lineWidth": {
                    "type": "number"
                },
                "stroke": {
                    "$ref": "#/definitions/IPolygonMaskDrawStroke"
                }
            },
            "type": "object"
        },
        "IPolygonMaskDrawStroke": {
            "properties": {
                "color": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IColor"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "opacity": {
                    "type": "number"
                },
                "width": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IPolygonMaskMove": {
            "properties": {
                "radius": {
                    "type": "number"
                },
                "type": {
                    "$ref": "#/definitions/PolygonMaskMoveType"
                }
            },
            "type": "object"
        },
        "IPolygonShape": {
            "properties": {
                "close": {
                    "type": "boolean"
                },
                "fill": {
                    "type": "boolean"
                },
                "nb_sides": {
                    "type": "number"
                },
                "particles": {
                    "$ref": "#/definitions/RecursivePartial<IParticles>"
                },
                "sides": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IPush": {
            "properties": {
                "particles_nb": {
                    "type": "number"
                },
                "quantity": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IRemove": {
            "properties": {
                "particles_nb": {
                    "type": "number"
                },
                "quantity": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IRepulse": {
            "properties": {
                "distance": {
                    "type": "number"
                },
                "duration": {
                    "type": "number"
                },
                "speed": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IRgb": {
            "properties": {
                "b": {
                    "type": "number"
                },
                "g": {
                    "type": "number"
                },
                "r": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IRotate": {
            "properties": {
                "animation": {
                    "$ref": "#/definitions/IRotateAnimation"
                },
                "direction": {
                    "$ref": "#/definitions/RotateDirection"
                },
                "random": {
                    "type": "boolean"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IRotateAnimation": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "speed": {
                    "type": "number"
                },
                "sync": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "IShadow": {
            "properties": {
                "blur": {
                    "type": "number"
                },
                "color": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IColor"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "enable": {
                    "type": "boolean"
                },
                "offset": {
                    "$ref": "#/definitions/ICoordinates"
                }
            },
            "type": "object"
        },
        "IShape": {
            "properties": {
                "character": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/ICharacterShape"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/ICharacterShape"
                            },
                            "type": "array"
                        }
                    ]
                },
                "custom": {
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/IShapeValues"
                            },
                            {
                                "items": {
                                    "$ref": "#/definitions/IShapeValues"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "type": "object"
                },
                "image": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IImageShape"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/IImageShape"
                            },
                            "type": "array"
                        }
                    ]
                },
                "options": {
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/IShapeValues"
                            },
                            {
                                "items": {
                                    "$ref": "#/definitions/IShapeValues"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "type": "object"
                },
                "polygon": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IPolygonShape"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/IPolygonShape"
                            },
                            "type": "array"
                        }
                    ]
                },
                "stroke": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IStroke"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/IStroke"
                            },
                            "type": "array"
                        }
                    ]
                },
                "type": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                }
            },
            "type": "object"
        },
        "IShapeValues": {
            "properties": {
                "close": {
                    "type": "boolean"
                },
                "fill": {
                    "type": "boolean"
                },
                "particles": {
                    "$ref": "#/definitions/RecursivePartial<IParticles>"
                }
            },
            "type": "object"
        },
        "ISize": {
            "properties": {
                "anim": {
                    "$ref": "#/definitions/ISizeAnimation"
                },
                "animation": {
                    "$ref": "#/definitions/ISizeAnimation"
                },
                "random": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/ISizeRandom"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ISizeAnimation": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "minimumValue": {
                    "type": "number"
                },
                "size_min": {
                    "type": "number"
                },
                "speed": {
                    "type": "number"
                },
                "sync": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ISizeRandom": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "minimumValue": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ISlow": {
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "factor": {
                    "type": "number"
                },
                "radius": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IStroke": {
            "properties": {
                "color": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IColor"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "opacity": {
                    "type": "number"
                },
                "width": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ITrail": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "fillColor": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IColor"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "length": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ITwinkle": {
            "properties": {
                "lines": {
                    "$ref": "#/definitions/ITwinkleValues"
                },
                "particles": {
                    "$ref": "#/definitions/ITwinkleValues"
                }
            },
            "type": "object"
        },
        "ITwinkleValues": {
            "properties": {
                "color": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IColor"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "enable": {
                    "type": "boolean"
                },
                "frequency": {
                    "type": "number"
                },
                "opacity": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IValueColor": {
            "properties": {
                "hsl": {
                    "$ref": "#/definitions/IHsl"
                },
                "rgb": {
                    "$ref": "#/definitions/IRgb"
                }
            },
            "type": "object"
        },
        "InteractivityDetect": {
            "enum": [
                "canvas",
                "parent",
                "window"
            ],
            "type": "string"
        },
        "MoveDirection": {
            "enum": [
                "bottom",
                "bottom-left",
                "bottom-right",
                "left",
                "none",
                "right",
                "top",
                "top-left",
                "top-right"
            ],
            "type": "string"
        },
        "OutMode": {
            "enum": [
                "bounce",
                "bounce-horizontal",
                "bounce-vertical",
                "destroy",
                "out"
            ],
            "type": "string"
        },
        "PolygonMaskInlineArrangement": {
            "enum": [
                "equidistant",
                "one-per-point",
                "per-point",
                "random-length",
                "random-point"
            ],
            "type": "string"
        },
        "PolygonMaskMoveType": {
            "enum": [
                "path",
                "radius"
            ],
            "type": "string"
        },
        "PolygonMaskType": {
            "enum": [
                "inline",
                "inside",
                "none",
                "outside"
            ],
            "type": "string"
        },
        "RecursivePartial<(data?:RecursivePartial<IAttract>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<ICharacterShape>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<ICollisions>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<IDensity>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<IImageShape>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<ILineLinked>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<ILineLinkedShadow>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<IMove>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<INoise>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<INoiseDelay>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<INoiseFactor>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<INoiseRandom>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<INoiseValue>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<IOpacity>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<IOpacityAnimation>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<IParticles>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<IParticlesNumber>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<IPolygonShape>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<IRotate>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<IRotateAnimation>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<IShadow>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<IShape>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<ISize>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<ISizeAnimation>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<IStroke>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<ITrail>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<ITwinkle>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<(data?:RecursivePartial<ITwinkleValues>|undefined)=>void>": {
            "type": "object"
        },
        "RecursivePartial<IAttract>": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<IAttract>|undefined)=>void>"
                },
                "rotate": {
                    "$ref": "#/definitions/RecursivePartial<ICoordinates>"
                },
                "rotateX": {
                    "type": "number"
                },
                "rotateY": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "RecursivePartial<ICharacterShape>": {
            "properties": {
                "close": {
                    "type": "boolean"
                },
                "fill": {
                    "type": "boolean"
                },
                "font": {
                    "type": "string"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<ICharacterShape>|undefined)=>void>"
                },
                "particles": {
                    "$ref": "#/definitions/RecursivePartial<IParticles>"
                },
                "style": {
                    "type": "string"
                },
                "value": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "weight": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RecursivePartial<ICharacterShape>_1": {
            "properties": {
                "close": {
                    "type": "boolean"
                },
                "fill": {
                    "type": "boolean"
                },
                "font": {
                    "type": "string"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<ICharacterShape>|undefined)=>void>"
                },
                "particles": {
                    "$ref": "#/definitions/RecursivePartial<IParticles>"
                },
                "style": {
                    "type": "string"
                },
                "value": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "weight": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RecursivePartial<ICollisions>": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<ICollisions>|undefined)=>void>"
                },
                "mode": {
                    "enum": [
                        "bounce"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RecursivePartial<IColor>": {
            "properties": {
                "value": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/IRgb"
                        },
                        {
                            "$ref": "#/definitions/IHsl"
                        },
                        {
                            "$ref": "#/definitions/IValueColor"
                        },
                        {
                            "type": "string"
                        }
                    ]
                }
            },
            "type": "object"
        },
        "RecursivePartial<IColor>_1": {
            "properties": {
                "value": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/IRgb"
                        },
                        {
                            "$ref": "#/definitions/IHsl"
                        },
                        {
                            "$ref": "#/definitions/IValueColor"
                        },
                        {
                            "type": "string"
                        }
                    ]
                }
            },
            "type": "object"
        },
        "RecursivePartial<ICoordinates>": {
            "properties": {
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "RecursivePartial<IDensity>": {
            "properties": {
                "area": {
                    "type": "number"
                },
                "enable": {
                    "type": "boolean"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<IDensity>|undefined)=>void>"
                },
                "value_area": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "RecursivePartial<IImageShape>": {
            "properties": {
                "close": {
                    "type": "boolean"
                },
                "fill": {
                    "type": "boolean"
                },
                "height": {
                    "type": "number"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<IImageShape>|undefined)=>void>"
                },
                "particles": {
                    "$ref": "#/definitions/RecursivePartial<IParticles>"
                },
                "replaceColor": {
                    "type": "boolean"
                },
                "replace_color": {
                    "type": "boolean"
                },
                "src": {
                    "type": "string"
                },
                "width": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "RecursivePartial<IImageShape>_1": {
            "properties": {
                "close": {
                    "type": "boolean"
                },
                "fill": {
                    "type": "boolean"
                },
                "height": {
                    "type": "number"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<IImageShape>|undefined)=>void>"
                },
                "particles": {
                    "$ref": "#/definitions/RecursivePartial<IParticles>"
                },
                "replaceColor": {
                    "type": "boolean"
                },
                "replace_color": {
                    "type": "boolean"
                },
                "src": {
                    "type": "string"
                },
                "width": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "RecursivePartial<ILineLinked>": {
            "properties": {
                "blink": {
                    "type": "boolean"
                },
                "color": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IColor"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "consent": {
                    "type": "boolean"
                },
                "distance": {
                    "type": "number"
                },
                "enable": {
                    "type": "boolean"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<ILineLinked>|undefined)=>void>"
                },
                "opacity": {
                    "type": "number"
                },
                "shadow": {
                    "$ref": "#/definitions/RecursivePartial<ILineLinkedShadow>"
                },
                "width": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "RecursivePartial<ILineLinkedShadow>": {
            "properties": {
                "blur": {
                    "type": "number"
                },
                "color": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IColor"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "enable": {
                    "type": "boolean"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<ILineLinkedShadow>|undefined)=>void>"
                }
            },
            "type": "object"
        },
        "RecursivePartial<IMove>": {
            "properties": {
                "attract": {
                    "$ref": "#/definitions/RecursivePartial<IAttract>"
                },
                "bounce": {
                    "type": "boolean"
                },
                "collisions": {
                    "type": "boolean"
                },
                "direction": {
                    "enum": [
                        "bottom",
                        "bottom-left",
                        "bottom-right",
                        "left",
                        "none",
                        "right",
                        "top",
                        "top-left",
                        "top-right"
                    ],
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<IMove>|undefined)=>void>"
                },
                "noise": {
                    "$ref": "#/definitions/RecursivePartial<INoise>"
                },
                "outMode": {
                    "enum": [
                        "bounce",
                        "bounce-horizontal",
                        "bounce-vertical",
                        "destroy",
                        "out"
                    ],
                    "type": "string"
                },
                "out_mode": {
                    "enum": [
                        "bounce",
                        "bounce-horizontal",
                        "bounce-vertical",
                        "destroy",
                        "out"
                    ],
                    "type": "string"
                },
                "random": {
                    "type": "boolean"
                },
                "speed": {
                    "type": "number"
                },
                "straight": {
                    "type": "boolean"
                },
                "trail": {
                    "$ref": "#/definitions/RecursivePartial<ITrail>"
                },
                "vibrate": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "RecursivePartial<INoise>": {
            "properties": {
                "delay": {
                    "$ref": "#/definitions/RecursivePartial<INoiseDelay>"
                },
                "enable": {
                    "type": "boolean"
                },
                "factor": {
                    "$ref": "#/definitions/RecursivePartial<INoiseFactor>"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<INoise>|undefined)=>void>"
                }
            },
            "type": "object"
        },
        "RecursivePartial<INoiseDelay>": {
            "properties": {
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<INoiseDelay>|undefined)=>void>"
                },
                "random": {
                    "$ref": "#/definitions/RecursivePartial<INoiseRandom>"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "RecursivePartial<INoiseFactor>": {
            "properties": {
                "horizontal": {
                    "$ref": "#/definitions/RecursivePartial<INoiseValue>"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<INoiseFactor>|undefined)=>void>"
                },
                "vertical": {
                    "$ref": "#/definitions/RecursivePartial<INoiseValue>"
                }
            },
            "type": "object"
        },
        "RecursivePartial<INoiseRandom>": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<INoiseRandom>|undefined)=>void>"
                },
                "minimumValue": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "RecursivePartial<INoiseValue>": {
            "properties": {
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<INoiseValue>|undefined)=>void>"
                },
                "offset": {
                    "type": "number"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "RecursivePartial<IOpacity>": {
            "properties": {
                "anim": {
                    "$ref": "#/definitions/RecursivePartial<IOpacityAnimation>"
                },
                "animation": {
                    "$ref": "#/definitions/RecursivePartial<IOpacityAnimation>"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<IOpacity>|undefined)=>void>"
                },
                "random": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IOpacityRandom"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "RecursivePartial<IOpacityAnimation>": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<IOpacityAnimation>|undefined)=>void>"
                },
                "minimumValue": {
                    "type": "number"
                },
                "opacity_min": {
                    "type": "number"
                },
                "speed": {
                    "type": "number"
                },
                "sync": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "RecursivePartial<IParticles>": {
            "properties": {
                "collisions": {
                    "$ref": "#/definitions/RecursivePartial<ICollisions>"
                },
                "color": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/RecursivePartial<IColor>"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/RecursivePartial<IColor>_1"
                            },
                            "type": "array"
                        }
                    ]
                },
                "lineLinked": {
                    "$ref": "#/definitions/RecursivePartial<ILineLinked>"
                },
                "line_linked": {
                    "$ref": "#/definitions/RecursivePartial<ILineLinked>"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<IParticles>|undefined)=>void>"
                },
                "move": {
                    "$ref": "#/definitions/RecursivePartial<IMove>"
                },
                "number": {
                    "$ref": "#/definitions/RecursivePartial<IParticlesNumber>"
                },
                "opacity": {
                    "$ref": "#/definitions/RecursivePartial<IOpacity>"
                },
                "rotate": {
                    "$ref": "#/definitions/RecursivePartial<IRotate>"
                },
                "shadow": {
                    "$ref": "#/definitions/RecursivePartial<IShadow>"
                },
                "shape": {
                    "$ref": "#/definitions/RecursivePartial<IShape>"
                },
                "size": {
                    "$ref": "#/definitions/RecursivePartial<ISize>"
                },
                "stroke": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/RecursivePartial<IStroke>"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/RecursivePartial<IStroke>_1"
                            },
                            "type": "array"
                        }
                    ]
                },
                "twinkle": {
                    "$ref": "#/definitions/RecursivePartial<ITwinkle>"
                }
            },
            "type": "object"
        },
        "RecursivePartial<IParticlesNumber>": {
            "properties": {
                "density": {
                    "$ref": "#/definitions/RecursivePartial<IDensity>"
                },
                "limit": {
                    "type": "number"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<IParticlesNumber>|undefined)=>void>"
                },
                "max": {
                    "type": "number"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "RecursivePartial<IPolygonShape>": {
            "properties": {
                "close": {
                    "type": "boolean"
                },
                "fill": {
                    "type": "boolean"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<IPolygonShape>|undefined)=>void>"
                },
                "nb_sides": {
                    "type": "number"
                },
                "particles": {
                    "$ref": "#/definitions/RecursivePartial<IParticles>"
                },
                "sides": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "RecursivePartial<IPolygonShape>_1": {
            "properties": {
                "close": {
                    "type": "boolean"
                },
                "fill": {
                    "type": "boolean"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<IPolygonShape>|undefined)=>void>"
                },
                "nb_sides": {
                    "type": "number"
                },
                "particles": {
                    "$ref": "#/definitions/RecursivePartial<IParticles>"
                },
                "sides": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "RecursivePartial<IRotate>": {
            "properties": {
                "animation": {
                    "$ref": "#/definitions/RecursivePartial<IRotateAnimation>"
                },
                "direction": {
                    "enum": [
                        "clockwise",
                        "counter-clockwise",
                        "random"
                    ],
                    "type": "string"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<IRotate>|undefined)=>void>"
                },
                "random": {
                    "type": "boolean"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "RecursivePartial<IRotateAnimation>": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<IRotateAnimation>|undefined)=>void>"
                },
                "speed": {
                    "type": "number"
                },
                "sync": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "RecursivePartial<IShadow>": {
            "properties": {
                "blur": {
                    "type": "number"
                },
                "color": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IColor"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "enable": {
                    "type": "boolean"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<IShadow>|undefined)=>void>"
                },
                "offset": {
                    "$ref": "#/definitions/RecursivePartial<ICoordinates>"
                }
            },
            "type": "object"
        },
        "RecursivePartial<IShape>": {
            "properties": {
                "character": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/RecursivePartial<ICharacterShape>"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/RecursivePartial<ICharacterShape>_1"
                            },
                            "type": "array"
                        }
                    ]
                },
                "custom": {
                    "$ref": "#/definitions/RecursivePartial<ShapeData>"
                },
                "image": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/RecursivePartial<IImageShape>"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/RecursivePartial<IImageShape>_1"
                            },
                            "type": "array"
                        }
                    ]
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<IShape>|undefined)=>void>"
                },
                "options": {
                    "$ref": "#/definitions/RecursivePartial<ShapeData>"
                },
                "polygon": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/RecursivePartial<IPolygonShape>"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/RecursivePartial<IPolygonShape>_1"
                            },
                            "type": "array"
                        }
                    ]
                },
                "stroke": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/RecursivePartial<IStroke>"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/RecursivePartial<IStroke>_1"
                            },
                            "type": "array"
                        }
                    ]
                },
                "type": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                }
            },
            "type": "object"
        },
        "RecursivePartial<ISize>": {
            "properties": {
                "anim": {
                    "$ref": "#/definitions/RecursivePartial<ISizeAnimation>"
                },
                "animation": {
                    "$ref": "#/definitions/RecursivePartial<ISizeAnimation>"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<ISize>|undefined)=>void>"
                },
                "random": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/ISizeRandom"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "RecursivePartial<ISizeAnimation>": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<ISizeAnimation>|undefined)=>void>"
                },
                "minimumValue": {
                    "type": "number"
                },
                "size_min": {
                    "type": "number"
                },
                "speed": {
                    "type": "number"
                },
                "sync": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "RecursivePartial<IStroke>": {
            "properties": {
                "color": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IColor"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<IStroke>|undefined)=>void>"
                },
                "opacity": {
                    "type": "number"
                },
                "width": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "RecursivePartial<IStroke>_1": {
            "properties": {
                "color": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IColor"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<IStroke>|undefined)=>void>"
                },
                "opacity": {
                    "type": "number"
                },
                "width": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "RecursivePartial<ITrail>": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "fillColor": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IColor"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "length": {
                    "type": "number"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<ITrail>|undefined)=>void>"
                }
            },
            "type": "object"
        },
        "RecursivePartial<ITwinkle>": {
            "properties": {
                "lines": {
                    "$ref": "#/definitions/RecursivePartial<ITwinkleValues>"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<ITwinkle>|undefined)=>void>"
                },
                "particles": {
                    "$ref": "#/definitions/RecursivePartial<ITwinkleValues>"
                }
            },
            "type": "object"
        },
        "RecursivePartial<ITwinkleValues>": {
            "properties": {
                "color": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/IColor"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "enable": {
                    "type": "boolean"
                },
                "frequency": {
                    "type": "number"
                },
                "load": {
                    "$ref": "#/definitions/RecursivePartial<(data?:RecursivePartial<ITwinkleValues>|undefined)=>void>"
                },
                "opacity": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "RecursivePartial<ShapeData>": {
            "type": "object"
        },
        "RotateDirection": {
            "enum": [
                "clockwise",
                "counter-clockwise",
                "random"
            ],
            "type": "string"
        }
    },
    "description": "The Options interface, defines all the options that can be used by `tsParticles`",
    "properties": {
        "absorbers": {
            "anyOf": [
                {
                    "$ref": "#/definitions/IAbsorber"
                },
                {
                    "items": {
                        "$ref": "#/definitions/IAbsorber"
                    },
                    "type": "array"
                }
            ]
        },
        "background": {
            "$ref": "#/definitions/IBackground"
        },
        "backgroundMask": {
            "$ref": "#/definitions/IBackgroundMask"
        },
        "detectRetina": {
            "description": "Enables the retina detection, if disabled the ratio used by canvas will be always 1 and not the device setting.",
            "type": "boolean"
        },
        "emitters": {
            "anyOf": [
                {
                    "$ref": "#/definitions/IEmitter"
                },
                {
                    "items": {
                        "$ref": "#/definitions/IEmitter"
                    },
                    "type": "array"
                }
            ]
        },
        "fpsLimit": {
            "description": "The F(rame)P(er)S(econd) limit applied to all particles animations.",
            "type": "number"
        },
        "fps_limit": {
            "description": "The Frame Per Second limit applied to all particles animations.",
            "type": "number"
        },
        "infection": {
            "$ref": "#/definitions/IInfection",
            "description": "The infection options"
        },
        "interactivity": {
            "$ref": "#/definitions/IInteractivity",
            "description": "The particles interaction options"
        },
        "particles": {
            "$ref": "#/definitions/IParticles",
            "description": "The particles options"
        },
        "pauseOnBlur": {
            "type": "boolean"
        },
        "polygon": {
            "$ref": "#/definitions/IPolygonMask",
            "description": "The polygon mask options."
        },
        "preset": {
            "anyOf": [
                {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                {
                    "type": "string"
                }
            ]
        },
        "retina_detect": {
            "description": "Enables the retina detection, if disabled the ratio used by canvas will be always 1 and not the device setting.",
            "type": "boolean"
        }
    },
    "type": "object"
}

